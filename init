#!/usr/bin/env node

global.configPath   = '/etc/autodocker/config.js'

const fs            = require('fs')
const { execSync }  = require('child_process')
const R             = require('ramda')
const debug         = R.memoize(require('debug'))
const path          = require('path')

const createDir = (dir) => {
  try {
    fs.statSync(dir)
  } catch (e) {
    debug('init')(`mkdir ${dir}`)
    execSync(`mkdir ${dir}`)
  }
}


const copyConfigIfNotExists = () => {
  try {
    fs.statSync(configPath)
  } catch (e) {
    debug('init')(`config copied to ${configPath}`)
    execSync(`cp config.js ${configPath}`)
  }
}

const init = () => {
  createDir(path.dirname(configPath))
  copyConfigIfNotExists()
  const config = require(configPath)
  const chown = dir => execSync(`chown -R ${config.user}:${config.user} ${dir}`)
  
  R.ap([createDir, chown], [config.logdir, config.workdir, path.dirname(config.dnsmasqConf)])
}

init()
