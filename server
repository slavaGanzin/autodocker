#!/usr/bin/env node-dev
process.env.DEBUG = process.env.DEBUG || "*"

const http        = require('http')
const httpProxy   = require('http-proxy')
const R           = require('ramda')
const proxy       = httpProxy.createProxy(require('./config').proxy)
const debug       = R.memoize(require('debug'))
const {matchURL}  = require('./urlMatcher')
  
proxy.on('error', (err, req, res) => {
  res.writeHead(500, {
    'Content-Type': 'text/plain'
  })
  debug('server:error')(err.toString(), req.headers.host + req.url)
  res.end(err.toString())
})

debug('server')('started')
http.createServer(function(req, res) {
  let URL = req.headers.host + req.url
  let target = matchURL(URL)
  if (target) {
    debug('server:redirect:http')(`${URL} -> ${target}`)
    return proxy.web(req, res, {target});
  }

  debug('server:error')(`${URL} not matched`)
  res.writeHead(500, { 'Content-Type': 'text/plain' });
  res.end('The request url and path did not match any of the listed rules!');
}).listen(80)

proxy.on('upgrade', (req, socket, head) => {
  throw 'Not implemented'
  debug('server:redirect:socket')(`${URL} -> ${target}`)
  proxy.ws(req, socket, head);
})
